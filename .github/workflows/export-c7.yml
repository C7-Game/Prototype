name: Export C7 Game
on:
  workflow_dispatch:
    inputs:
      debug-build:
        type: boolean
        description: Checked for debug build, unchecked for release
        default: true
      folder-suffix:
        description: Will be added to "C7" for folder name
        required: false
      include-username:
        type: boolean
        description: Append your GitHub username to the folder name
        default: true
      include-datetime:
        type: boolean
        description: Append ISO8601 date/time to folder name
        default: true

env:
  GODOT_VERSION: 3.4.4
  EXPORT_NAME: C7

jobs:
  Export-C7-Windows:
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:mono-3.4
    steps:
    - name: Optionally set DEBUG_BUILD
      if: github.event.inputs.debug-build == 'true'
      run: |
        echo "DEBUG_BUILD=-debug" >> $GITHUB_ENV
    - name: Optionally set GH_USERNAME
      if: github.event.inputs.include-username == 'true'
      run: |
        echo "GH_USERNAME=-${{ github.actor }}" >> $GITHUB_ENV
    - name: Optionally set BUILD_TIME
      if: github.event.inputs.include-datetime == 'true'
      run: |
        echo "BUILD_TIME=-$(date --iso-8601=minutes | sed -e 's/:/-/g' | sed -e 's/\+.*//')" >> $GITHUB_ENV
    - name: Set FOLDER_NAME
      run: |
        echo "FOLDER_NAME=${EXPORT_NAME}${{ github.event.inputs.folder-suffix }}${GH_USERNAME}${BUILD_TIME}" >> $GITHUB_ENV
    - name: Checkout
      uses: actions/checkout@v2
      with:
        lfs: true
    - name: Setup
      run: |
        mkdir -v -p ~/.local/share/godot/templates
        mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/templates/${GODOT_VERSION}.stable.mono
    - name: Windows Build
      run: |
        mkdir -v -p build/${FOLDER_NAME}
        cd ${EXPORT_NAME}
        godot -v --export${DEBUG_BUILD} "Windows Desktop" ../build/${FOLDER_NAME}/${EXPORT_NAME}.exe
    - name: Copy Static Files
      run: |
        if cp ${EXPORT_NAME}/c7-static-map-save.json build/${FOLDER_NAME}/ && cp ${EXPORT_NAME}/credits.txt build/${FOLDER_NAME}/  && cp ${EXPORT_NAME}/Title_Screen.jpg build/${FOLDER_NAME}/
        then
          echo "successfully copied static files to build"
        else
          echo "::warning title=Static File Copy Failed::Failed to add the static files to the build"
        fi
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.FOLDER_NAME }}-Windows
        path: build/${{ ENV.FOLDER_NAME }}
  Export-C7-Linux:
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:mono-3.4
    steps:
    - name: Optionally set DEBUG_BUILD
      if: github.event.inputs.debug-build == 'true'
      run: |
        echo "DEBUG_BUILD=-debug" >> $GITHUB_ENV
    - name: Optionally set GH_USERNAME
      if: github.event.inputs.include-username == 'true'
      run: |
        echo "GH_USERNAME=-${{ github.actor }}" >> $GITHUB_ENV
    - name: Optionally set BUILD_TIME
      if: github.event.inputs.include-datetime == 'true'
      run: |
        echo "BUILD_TIME=-$(date --iso-8601=minutes | sed -e 's/:/-/g' | sed -e 's/\+.*//')" >> $GITHUB_ENV
    - name: Set FOLDER_NAME
      run: |
        echo "FOLDER_NAME=${EXPORT_NAME}${{ github.event.inputs.folder-suffix }}${GH_USERNAME}${BUILD_TIME}" >> $GITHUB_ENV
    - name: Checkout
      uses: actions/checkout@v2
      with:
        lfs: true
    - name: Setup
      run: |
        mkdir -v -p ~/.local/share/godot/templates
        mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/templates/${GODOT_VERSION}.stable.mono
    - name: Linux Build
      run: |
        mkdir -v -p build/${FOLDER_NAME}
        cd ${EXPORT_NAME}
        godot -v --export${DEBUG_BUILD} "Linux/X11" ../build/${FOLDER_NAME}/${EXPORT_NAME}.x86_64
    - name: Copy Static Files
      run: |
        if cp ${EXPORT_NAME}/c7-static-map-save.json build/${FOLDER_NAME}/ && cp ${EXPORT_NAME}/credits.txt build/${FOLDER_NAME}/  && cp ${EXPORT_NAME}/Title_Screen.jpg build/${FOLDER_NAME}/
        then
          echo "successfully copied static files to build"
        else
          echo "::warning title=Static File Copy Failed::Failed to add the static files to the build"
        fi
    - name: Create Tar Archive
      run: |
        tar -C build -zcvf build/${FOLDER_NAME}.tgz ${FOLDER_NAME}
    - name: Upload  Artifact
      uses: actions/upload-artifact@v2
      with:
        path: build/${{ env.FOLDER_NAME }}.tgz
        name: ${{ env.FOLDER_NAME }}-Linux-x86_64
  Export-C7-Mac:
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:mono-3.4
    steps:
    - name: Optionally set DEBUG_BUILD
      if: github.event.inputs.debug-build == 'true'
      run: |
        echo "DEBUG_BUILD=-debug" >> $GITHUB_ENV
    - name: Optionally set GH_USERNAME
      if: github.event.inputs.include-username == 'true'
      run: |
        echo "GH_USERNAME=-${{ github.actor }}" >> $GITHUB_ENV
    - name: Optionally set BUILD_TIME
      if: github.event.inputs.include-datetime == 'true'
      run: |
        echo "BUILD_TIME=-$(date --iso-8601=minutes | sed -e 's/:/-/g' | sed -e 's/\+.*//')" >> $GITHUB_ENV
    - name: Set FOLDER_NAME
      run: |
        echo "FOLDER_NAME=${EXPORT_NAME}${{ github.event.inputs.folder-suffix }}${GH_USERNAME}${BUILD_TIME}" >> $GITHUB_ENV
    - name: Checkout
      uses: actions/checkout@v2
      with:
        lfs: true
    - name: Setup
      run: |
        mkdir -v -p ~/.local/share/godot/templates
        mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/templates/${GODOT_VERSION}.stable.mono
    - name: Mac Build
      run: |
        mkdir -v -p build/${FOLDER_NAME}
        cd ${EXPORT_NAME}
        godot -v --export${DEBUG_BUILD} "Mac OSX" ../build/${FOLDER_NAME}.zip
    - name: Copy Static Files
      run: |
        cd ${EXPORT_NAME}
        if zip ../build/${FOLDER_NAME}.zip c7-static-map-save.json credits.txt Title_Screen.jpg
        then
          echo "successfully copied static files to build"
        else
          echo "::warning title=Static File Copy Failed::Failed to add the static files to the build"
        fi
    - name: Upload  Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.FOLDER_NAME }}-Mac
        path: build/${{ env.FOLDER_NAME }}.zip
